<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IP8cGx//HBsf/xoZHv9DQkX/vry7/8rIx//e3dz/8vHx/+/u7v+4t7f/NDI2/x0cIP8yMTT/mZeX/8zK
        yf9ycHL/JCMn/x8eIv8fHiL/Hx4i/x8eIv8fHiL/Hx4i/x8eIv8fHiL/Hx4i/x4dIf8eHSH/IB8j/2Vl
        aJ/+/v4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACtqqgFtbOwpoeGhvQgHyP/Kikt/zU0
        N/80Mzb/Li0x/yAfI/8iISX/MC8y/zIxNf8vLjH/RENG/7u4t//d29r/6+rq//Hw8P/t7Ov/2NbV/29t
        b/8dHCD/HBsf/39+f//X1tX/VlVY/yUkJ/8eHSL/HRwg/x8eIv8fHiL/Hh0h/x4dIf8hICT/ISAk/x0c
        IP8eHSH/Hx4i/x8eIv+KiozQ////SgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsq+tB7y5
        t7t8enz/HBsf/2JhYv+sqqj/srCu/5aVlf8nJir/NTQ3/7Sysv/Mysr/zs3O/21sbv9hX2H/kpCS/9fW
        1//i4eD/4+Lh/9nY1/+koqL/LCou/xsaHv96eXv/6ejn/9TT1P/Fxcb/kpKT/zw7P/8dHCH/Hh0h/ywr
        Lv9mZWX/joyM/5iWlv+BgIH/NTQ3/x4dIf8eHSH/n5+g//7+/Y8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALa0sgnBwL6/bm1u/xsaHv86OTz/p6Wk/8jGxf9paGr/IiEl/yYlKf+Mi43/9PT0/8TD
        xP9FREf/Gxoe/x4dIf9JSEv/trW0/8vJx//U0tH/vry6/0tKTP8ZGBz/c3J1//X19f/BwcL/p6an/93c
        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
        AADf3twR5OPhzp+en/8cGx//Pj1A/7q5uf/CwL//trS0/0xLTf8dHCD/cnBw/6eko/+mo6H/eXd3/yAe
        Iv8aGR3/fn1//+jm5v/o5+f/2NbV/83Lyf+0sa//Y2Fi/xkYHP8bGh7/HBsf/x0cIP8cGx//HBsf/x4d
        If8eHSH/Hh0h/x4dIf8dHCD/HBsf/x0cIP8eHSH/Hh0h/zEwNP+8u7r/1NLQdgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4uHfFObl49O6ubn/R0dK/zg3O/9DQkX/Pj1A/zo5PP8pJyv/Hx4i/zAv
        M/9AP0L/RkVI/0hHSv9AP0L/U1NW/8vLy//08/P/7Ozs/9nY1//V09L/tLGv/4iGhv9TUlX/TUxP/0ZF
        SP9AP0L/Ojk9/zU0OP8xMDT/Ly4x/y0sMP8tLDD/Kyou/ycmKv8jIib/IiEl/yIhJf9MS0//w8HA/8fF
        wm8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXk4xTm5eTJ5+bl8tvb2vLNzMz0vb299rCv
        sPampaf4oqGj+aOipPmpqKr6tLO1+8TExfvV1dX85OTl+uTj4/7s7Ov/9PPz/+zr6//e3Nz/2tjY/7Gu
        rP/Avr3/7Ozs/+rp6v/l5eX/4N/f/9nZ2f/S0tL/zMvL/8bGxv/CwcH/wL+//7u6uv+wsK//paSk/56d
        nf+fnp7/sK6u/7+9u/+6uLZuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADn5uQE6OflLOrp
        5zjv7u049fTzPPr5+D/+/fw////+RP///0j///9I////Tf///1D///9Q+Pj4ZPDv75fd29rr5uTk//Hx
        8f/s6+v+3t3c/tPR0P+wrav/uLWz0PPz8nb29fV19fT0ffPy8n7x8O9/7u3shuzr6Yjp6OaJ5uXjkOPi
        4JHf3tyT2tnWmtTT0ZvOzMqcx8XDo7+8uqS2s7Gmsq+tSQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA5+bkAOjn5QDp6OcA6+rpAO3s6wDv7u0A8O/vAPLx8QD08/MA9vX1APj39wD5+PgA+fn5AMbE
        wk/d29rt0c/O/eDe3v/x8fD/7+/vydjX1pXBv73psa+ts6ypp0b39vYA9PT0APPz8wDy8fEA7+7uAO3s
        6wDq6egA5+blAObl5ADj4uEA4+LgAPHx8ADw7+0A////AJ6cmgGcmZcBn5uZAaShnwEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADT0dBY1tTT/srIxv/e3Nz/8fHw/fT09HHCwL4Mv727Lre0sgmtqqgAraqoAAAA
        AAAAAAAAAAAAAOrp6ADp6OcA5uXkAOLh4ADg390A3dzaANfW1ADR0M4Ay8rIAMXCwAC+vLoAuLa0ALKv
        rQCurKoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAx8bEN7u5t/LJx8X03dvbwO/v72v4+PcSxsTDAMC+
        vAC2s7EAqaakAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALGvrRi2tLGYxcPCV9fV
        1BL09fQA9/f3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQjGEARGMxCDCMYQBEYxEIMMxhjERjEQz///8HAD/x/v/4
        AAAAAA////gAAAAAD///4AAAAAAf///gAAAAAA///+AAAAAAD///4AAAAAAP///gAAAAAA///+AAAAAA
        D///4AAAAAAP///gAAAAAA///+AAAAAAD///4AAAAAAP///gAAAAAA///+AAAAAAD///4AAAAAAP///g
        AAAAAA//////AD//D/////8Af////////wP/////////D/////8=
</value>
  </data>
</root>